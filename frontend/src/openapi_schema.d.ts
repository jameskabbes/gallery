/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/auth/": {
    /** Auth Root */
    get: operations["auth_root_auth__get"];
  };
  "/token/": {
    /** Post Token */
    post: operations["post_token_token__post"];
  };
  "/auth/login/password/": {
    /** Login */
    post: operations["login_auth_login_password__post"];
  };
  "/auth/signup/": {
    /** Sign Up */
    post: operations["sign_up_auth_signup__post"];
  };
  "/auth/login/email-magic-link/": {
    /** Login With Email Magic Link */
    post: operations["login_with_email_magic_link_auth_login_email_magic_link__post"];
  };
  "/auth/verify-magic-link/": {
    /** Verify Magic Link */
    post: operations["verify_magic_link_auth_verify_magic_link__post"];
  };
  "/auth/login/google/": {
    /** Login With Google */
    post: operations["login_with_google_auth_login_google__post"];
  };
  "/auth/logout/": {
    /** Logout */
    post: operations["logout_auth_logout__post"];
  };
  "/users/{user_id}/": {
    /** Get user by ID */
    get: operations["user_read"];
    /** Delete user by ID */
    delete: operations["user_delete"];
    /** Update user by ID */
    patch: operations["user_update"];
  };
  "/users/": {
    /** Get all users */
    get: operations["get_users_users__get"];
    /** Create a new user */
    post: operations["user_create"];
  };
  "/available/username/{username}/": {
    /** Check if a username is available */
    get: operations["user_username_available_available_username__username___get"];
  };
  "/available/email/{email}/": {
    /** Check if an email is available */
    get: operations["user_email_available_available_email__email___get"];
  };
  "/admin/users/{user_id}/": {
    /** Get user by ID (admin) */
    get: operations["user_read_admin"];
    /** Delete user by ID (admin) */
    delete: operations["user_delete_admin"];
    /** Update user by ID (admin) */
    patch: operations["user_update_admin"];
  };
  "/admin/users/": {
    /** Get all users (admin) */
    get: operations["get_users_admin_users__get"];
    /** Create a new user (admin) */
    post: operations["user_create_admin"];
  };
  "/user-access-tokens/{user_access_token_id}/": {
    /** Get user_access_token by ID */
    get: operations["user_access_token_read"];
    /** Delete user_access_token by ID */
    delete: operations["user_access_token_delete"];
    /** Update user_access_token by ID */
    patch: operations["user_access_token_update"];
  };
  "/user-access-tokens/": {
    /** Create a new user_access_token */
    post: operations["user_access_token_create"];
  };
  "/users/{user_id}/access-tokens/": {
    /** Get User Access Tokens */
    get: operations["get_user_access_tokens_users__user_id__access_tokens__get"];
  };
  "/admin/user-access-tokens/{user_access_token_id}/": {
    /** Get user_access_token by ID (admin) */
    get: operations["user_access_token_read_admin"];
    /** Delete user_access_token by ID (admin) */
    delete: operations["user_access_token_delete_admin"];
    /** Update user_access_token by ID (admin) */
    patch: operations["user_access_token_update_admin"];
  };
  "/admin/user-access-tokens/": {
    /** Create a new user_access_token (admin) */
    post: operations["user_access_token_create_admin"];
  };
  "/api-keys/{api_key_id}/": {
    /** Get api_key by ID */
    get: operations["api_key_read"];
    /** Delete api_key by ID */
    delete: operations["api_key_delete"];
    /** Update api_key by ID */
    patch: operations["api_key_update"];
  };
  "/api-keys/": {
    /** Create a new api_key */
    post: operations["api_key_create"];
  };
  "/{api_key_id}/generate-jwt/": {
    /** Get Api Key Jwt */
    get: operations["get_api_key_jwt__api_key_id__generate_jwt__get"];
  };
  "/users/{user_id}/api-keys/": {
    /** Get User Api Keys */
    get: operations["get_user_api_keys_users__user_id__api_keys__get"];
  };
  "/users/{user_id}/api-keys/available/": {
    /** Get Is Api Key Available */
    get: operations["get_is_api_key_available_users__user_id__api_keys_available__get"];
  };
  "/admin/api-keys/{api_key_id}/": {
    /** Get api_key by ID (admin) */
    get: operations["api_key_read_admin"];
    /** Delete api_key by ID (admin) */
    delete: operations["api_key_delete_admin"];
    /** Update api_key by ID (admin) */
    patch: operations["api_key_update_admin"];
  };
  "/admin/api-keys/": {
    /** Create a new api_key (admin) */
    post: operations["api_key_create_admin"];
  };
  "/api-keys/{api_key_id}/scopes/{scope_id}/": {
    /** Add a scope to an API key */
    post: operations["add_scope_to_api_key_api_keys__api_key_id__scopes__scope_id___post"];
    /** Remove a scope from an API key */
    delete: operations["remove_scope_from_api_key_api_keys__api_key_id__scopes__scope_id___delete"];
  };
  "/users/{user_id}/galleries/available/": {
    /** Get Is Gallery Available */
    get: operations["get_is_gallery_available_users__user_id__galleries_available__get"];
  };
  "/users/{user_id}/galleries/": {
    /** Get User Galleries */
    get: operations["get_user_galleries_users__user_id__galleries__get"];
  };
  "/galleries/{gallery_id}/": {
    /** Get gallery by ID */
    get: operations["gallery_read"];
    /** Delete gallery by ID */
    delete: operations["gallery_delete"];
    /** Update gallery by ID */
    patch: operations["gallery_update"];
  };
  "/galleries/": {
    /** Create a new gallery */
    post: operations["gallery_create"];
  };
  "/{gallery_id}/upload/": {
    /** Upload File To Gallery */
    post: operations["upload_file_to_gallery__gallery_id__upload__post"];
  };
  "/{gallery_id}/sync/": {
    /** Sync Gallery */
    post: operations["sync_gallery__gallery_id__sync__post"];
  };
  "/admin/galleries/{gallery_id}/": {
    /** Get gallery by ID (admin) */
    get: operations["gallery_read_admin"];
    /** Delete gallery by ID (admin) */
    delete: operations["gallery_delete_admin"];
    /** Update gallery by ID (admin) */
    patch: operations["gallery_update_admin"];
  };
  "/admin/galleries/": {
    /** Create a new gallery (admin) */
    post: operations["gallery_create_admin"];
  };
  "/pages/profile/": {
    /** Get Pages Profile */
    get: operations["get_pages_profile_pages_profile__get"];
  };
  "/pages/home/": {
    /** Get Home Page */
    get: operations["get_home_page_pages_home__get"];
  };
  "/pages/settings/": {
    /** Get Settings Page */
    get: operations["get_settings_page_pages_settings__get"];
  };
  "/pages/settings/api-keys/": {
    /** Get Settings Page */
    get: operations["get_settings_page_pages_settings_api_keys__get"];
  };
  "/pages/styles/": {
    /** Get Styles Page */
    get: operations["get_styles_page_pages_styles__get"];
  };
  "/pages/galleries/{gallery_id}/": {
    /** Get Gallery Page */
    get: operations["get_gallery_page_pages_galleries__gallery_id___get"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** ApiKey */
    ApiKey: {
      /** User Id */
      user_id: string;
      /**
       * Issued
       * Format: date-time
       */
      issued: string;
      /**
       * Expiry
       * Format: date-time
       */
      expiry: string;
      /** Id */
      id: string;
      /** Name */
      name: string;
    };
    /** ApiKeyJWTResponse */
    ApiKeyJWTResponse: {
      /** Jwt */
      jwt: string;
    };
    /** ApiKeyPrivate */
    ApiKeyPrivate: {
      /** User Id */
      user_id: string;
      /**
       * Issued
       * Format: date-time
       */
      issued: string;
      /**
       * Expiry
       * Format: date-time
       */
      expiry: string;
      /** Name */
      name: string;
    };
    /** AuthCredentialIdAndType */
    AuthCredentialIdAndType: {
      /** Id */
      id: string;
      /**
       * Type
       * @enum {string}
       */
      type: "access_token" | "api_key";
    };
    /** BaseModel */
    BaseModel: Record<string, never>;
    /** Body_login_auth_login_password__post */
    Body_login_auth_login_password__post: {
      /**
       * Stay Signed In
       * @default false
       */
      stay_signed_in?: boolean;
      /** Grant Type */
      grant_type?: string | null;
      /** Username */
      username: string;
      /** Password */
      password: string;
      /**
       * Scope
       * @default
       */
      scope?: string;
      /** Client Id */
      client_id?: string | null;
      /** Client Secret */
      client_secret?: string | null;
    };
    /** Body_post_token_token__post */
    Body_post_token_token__post: {
      /**
       * Stay Signed In
       * @default false
       */
      stay_signed_in?: boolean;
      /** Grant Type */
      grant_type?: string | null;
      /** Username */
      username: string;
      /** Password */
      password: string;
      /**
       * Scope
       * @default
       */
      scope?: string;
      /** Client Id */
      client_id?: string | null;
      /** Client Secret */
      client_secret?: string | null;
    };
    /** Body_sign_up_auth_signup__post */
    Body_sign_up_auth_signup__post: {
      /**
       * Email
       * Format: email
       */
      email: string;
      /** Password */
      password: string;
      /**
       * Stay Signed In
       * @default false
       */
      stay_signed_in?: boolean;
    };
    /** Body_upload_file_to_gallery__gallery_id__upload__post */
    Body_upload_file_to_gallery__gallery_id__upload__post: {
      /**
       * File
       * Format: binary
       */
      file: string;
    };
    /** DetailOnlyResponse */
    DetailOnlyResponse: {
      /** Detail */
      detail: string;
    };
    /** Gallery */
    Gallery: {
      /** Id */
      id: string;
      /** Name */
      name: string;
      /** User Id */
      user_id: string;
      /** Visibility Level */
      visibility_level: number;
      /** Parent Id */
      parent_id: string;
      /** Description */
      description: string;
      /**
       * Date
       * Format: date
       */
      date: string;
    };
    /** GalleryPublic */
    GalleryPublic: {
      /** Id */
      id: string;
      /** User Id */
      user_id: string;
      /** Name */
      name: string;
      /** Parent Id */
      parent_id: string | null;
      /** Description */
      description: string | null;
      /** Date */
      date: string | null;
    };
    /** GetAuthBaseReturn */
    GetAuthBaseReturn: {
      user: components["schemas"]["UserPrivate"] | null;
      /** Scope Ids */
      scope_ids: number[] | null;
      /** Expiry */
      expiry: string | null;
      auth_credential: components["schemas"]["AuthCredentialIdAndType"] | null;
    };
    /** GetAuthReturn */
    GetAuthReturn: {
      auth: components["schemas"]["GetAuthBaseReturn"];
    };
    /** GetGalleryPageResponse */
    GetGalleryPageResponse: {
      auth: components["schemas"]["GetAuthBaseReturn"];
      gallery: components["schemas"]["GalleryPublic"];
      /** Parents */
      parents: components["schemas"]["GalleryPublic"][];
      /** Children */
      children: components["schemas"]["GalleryPublic"][];
    };
    /** GetHomePageResponse */
    GetHomePageResponse: {
      auth: components["schemas"]["GetAuthBaseReturn"];
    };
    /** GetProfilePageResponse */
    GetProfilePageResponse: {
      auth: components["schemas"]["GetAuthBaseReturn"];
      user?: components["schemas"]["UserPrivate"] | null;
    };
    /** GetSettingsApiKeysPageResponse */
    GetSettingsApiKeysPageResponse: {
      auth: components["schemas"]["GetAuthBaseReturn"];
      /** Api Keys */
      api_keys: {
        [key: string]: components["schemas"]["ApiKey"];
      };
      /** Api Key Scope Ids */
      api_key_scope_ids: {
        [key: string]: number[];
      };
    };
    /** GetSettingsPageResponse */
    GetSettingsPageResponse: {
      auth: components["schemas"]["GetAuthBaseReturn"];
    };
    /** GetStylesPageResponse */
    GetStylesPageResponse: {
      auth: components["schemas"]["GetAuthBaseReturn"];
    };
    /** GoogleAuthRequest */
    GoogleAuthRequest: {
      /** Access Token */
      access_token: string;
    };
    /** GoogleAuthResponse */
    GoogleAuthResponse: {
      auth: components["schemas"]["GetAuthBaseReturn"];
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /** LoginResponse */
    LoginResponse: {
      auth: components["schemas"]["GetAuthBaseReturn"];
    };
    /** LoginWithEmailMagicLinkRequest */
    LoginWithEmailMagicLinkRequest: {
      /**
       * Email
       * Format: email
       */
      email: string;
      /**
       * Stay Signed In
       * @default false
       */
      stay_signed_in?: boolean;
    };
    /** NotFoundResponse */
    NotFoundResponse: {
      /** Detail */
      detail: string;
    };
    /** SignupResponse */
    SignupResponse: {
      auth: components["schemas"]["GetAuthBaseReturn"];
    };
    /** UploadFileToGalleryResponse */
    UploadFileToGalleryResponse: {
      /** Message */
      message: string;
    };
    /** User */
    User: {
      /** Id */
      id: string;
      /**
       * Email
       * Format: email
       */
      email: string;
      /** Username */
      username: string;
      /** Hashed Password */
      hashed_password: string | null;
      /** User Role Id */
      user_role_id: number;
    };
    /** UserAccessToken */
    UserAccessToken: {
      /** User Id */
      user_id: string;
      /**
       * Issued
       * Format: date-time
       */
      issued: string;
      /**
       * Expiry
       * Format: date-time
       */
      expiry: string;
      /** Id */
      id: string;
    };
    /** UserPrivate */
    UserPrivate: {
      /** Id */
      id: string;
      /** Username */
      username: string | null;
      /**
       * Email
       * Format: email
       */
      email: string;
      /** User Role Id */
      user_role_id: number;
    };
    /** UserPublic */
    UserPublic: {
      /** Id */
      id: string;
      /** Username */
      username: string | null;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
    /** VerifyMagicLinkRequest */
    VerifyMagicLinkRequest: {
      /**
       * Stay Signed In
       * @default false
       */
      stay_signed_in?: boolean;
    };
    /** VerifyMagicLinkResponse */
    VerifyMagicLinkResponse: {
      auth: components["schemas"]["GetAuthBaseReturn"];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Auth Root */
  auth_root_auth__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["GetAuthReturn"];
        };
      };
    };
  };
  /** Post Token */
  post_token_token__post: {
    requestBody: {
      content: {
        "application/x-www-form-urlencoded": components["schemas"]["Body_post_token_token__post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Login */
  login_auth_login_password__post: {
    requestBody: {
      content: {
        "application/x-www-form-urlencoded": components["schemas"]["Body_login_auth_login_password__post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LoginResponse"];
        };
      };
      /** @description Could not validate credentials */
      401: {
        content: {
          "application/json": components["schemas"]["DetailOnlyResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Sign Up */
  sign_up_auth_signup__post: {
    requestBody: {
      content: {
        "application/x-www-form-urlencoded": components["schemas"]["Body_sign_up_auth_signup__post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["SignupResponse"];
        };
      };
      /** @description User already exists */
      409: {
        content: {
          "application/json": components["schemas"]["DetailOnlyResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Login With Email Magic Link */
  login_with_email_magic_link_auth_login_email_magic_link__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["LoginWithEmailMagicLinkRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["DetailOnlyResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Verify Magic Link */
  verify_magic_link_auth_verify_magic_link__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["VerifyMagicLinkRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["VerifyMagicLinkResponse"];
        };
      };
      /** @description Invalid token */
      401: {
        content: {
          "application/json": components["schemas"]["DetailOnlyResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Login With Google */
  login_with_google_auth_login_google__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["GoogleAuthRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["GoogleAuthResponse"];
        };
      };
      /** @description Invalid token */
      400: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Logout */
  logout_auth_logout__post: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["DetailOnlyResponse"];
        };
      };
    };
  };
  /** Get user by ID */
  user_read: {
    parameters: {
      query: {
        id_value: unknown;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserPublic"];
        };
      };
      /** @description User not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete user by ID */
  user_delete: {
    parameters: {
      query: {
        id_value: unknown;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description User not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update user by ID */
  user_update: {
    parameters: {
      query: {
        id_value: unknown;
        model: components["schemas"]["BaseModel"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserPrivate"];
        };
      };
      /** @description User not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundResponse"];
        };
      };
      /** @description User already exists */
      409: {
        content: {
          "application/json": components["schemas"]["DetailOnlyResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get all users */
  get_users_users__get: {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserPublic"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create a new user */
  user_create: {
    parameters: {
      query: {
        model: components["schemas"]["BaseModel"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserPrivate"];
        };
      };
      /** @description User already exists */
      409: {
        content: {
          "application/json": components["schemas"]["DetailOnlyResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Check if a username is available */
  user_username_available_available_username__username___get: {
    parameters: {
      path: {
        username: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Username already exists */
      409: {
        content: {
          "application/json": components["schemas"]["DetailOnlyResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Check if an email is available */
  user_email_available_available_email__email___get: {
    parameters: {
      path: {
        email: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Email already exists */
      409: {
        content: {
          "application/json": components["schemas"]["DetailOnlyResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get user by ID (admin) */
  user_read_admin: {
    parameters: {
      query: {
        id_value: unknown;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description User not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete user by ID (admin) */
  user_delete_admin: {
    parameters: {
      query: {
        id_value: unknown;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description User not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update user by ID (admin) */
  user_update_admin: {
    parameters: {
      query: {
        id_value: unknown;
        model: components["schemas"]["BaseModel"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description User not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundResponse"];
        };
      };
      /** @description User already exists */
      409: {
        content: {
          "application/json": components["schemas"]["DetailOnlyResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get all users (admin) */
  get_users_admin_users__get: {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserPublic"][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create a new user (admin) */
  user_create_admin: {
    parameters: {
      query: {
        model: components["schemas"]["BaseModel"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description User already exists */
      409: {
        content: {
          "application/json": components["schemas"]["DetailOnlyResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get user_access_token by ID */
  user_access_token_read: {
    parameters: {
      query: {
        id_value: unknown;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserAccessToken"];
        };
      };
      /** @description UserAccessToken not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete user_access_token by ID */
  user_access_token_delete: {
    parameters: {
      query: {
        id_value: unknown;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description UserAccessToken not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update user_access_token by ID */
  user_access_token_update: {
    parameters: {
      query: {
        id_value: unknown;
        model: components["schemas"]["BaseModel"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserAccessToken"];
        };
      };
      /** @description UserAccessToken not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundResponse"];
        };
      };
      /** @description UserAccessToken already exists */
      409: {
        content: {
          "application/json": components["schemas"]["DetailOnlyResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create a new user_access_token */
  user_access_token_create: {
    parameters: {
      query: {
        model: components["schemas"]["BaseModel"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserAccessToken"];
        };
      };
      /** @description UserAccessToken already exists */
      409: {
        content: {
          "application/json": components["schemas"]["DetailOnlyResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get User Access Tokens */
  get_user_access_tokens_users__user_id__access_tokens__get: {
    parameters: {
      query: {
        id_value: string;
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserAccessToken"][];
        };
      };
      /** @description User does not have permission to view another user's access tokens */
      403: {
        content: {
          "application/json": components["schemas"]["DetailOnlyResponse"];
        };
      };
      /** @description User not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get user_access_token by ID (admin) */
  user_access_token_read_admin: {
    parameters: {
      query: {
        id_value: unknown;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserAccessToken"];
        };
      };
      /** @description UserAccessToken not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete user_access_token by ID (admin) */
  user_access_token_delete_admin: {
    parameters: {
      query: {
        id_value: unknown;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description UserAccessToken not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update user_access_token by ID (admin) */
  user_access_token_update_admin: {
    parameters: {
      query: {
        id_value: unknown;
        model: components["schemas"]["BaseModel"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserAccessToken"];
        };
      };
      /** @description UserAccessToken not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundResponse"];
        };
      };
      /** @description UserAccessToken already exists */
      409: {
        content: {
          "application/json": components["schemas"]["DetailOnlyResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create a new user_access_token (admin) */
  user_access_token_create_admin: {
    parameters: {
      query: {
        model: components["schemas"]["BaseModel"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserAccessToken"];
        };
      };
      /** @description UserAccessToken already exists */
      409: {
        content: {
          "application/json": components["schemas"]["DetailOnlyResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get api_key by ID */
  api_key_read: {
    parameters: {
      query: {
        id_value: unknown;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ApiKey"];
        };
      };
      /** @description ApiKey not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete api_key by ID */
  api_key_delete: {
    parameters: {
      query: {
        id_value: unknown;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description ApiKey not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update api_key by ID */
  api_key_update: {
    parameters: {
      query: {
        id_value: unknown;
        model: components["schemas"]["BaseModel"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ApiKey"];
        };
      };
      /** @description ApiKey not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundResponse"];
        };
      };
      /** @description ApiKey already exists */
      409: {
        content: {
          "application/json": components["schemas"]["DetailOnlyResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create a new api_key */
  api_key_create: {
    parameters: {
      query: {
        model: components["schemas"]["BaseModel"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ApiKey"];
        };
      };
      /** @description ApiKey already exists */
      409: {
        content: {
          "application/json": components["schemas"]["DetailOnlyResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Api Key Jwt */
  get_api_key_jwt__api_key_id__generate_jwt__get: {
    parameters: {
      path: {
        api_key_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ApiKeyJWTResponse"];
        };
      };
      /** @description ApiKey not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get User Api Keys */
  get_user_api_keys_users__user_id__api_keys__get: {
    parameters: {
      query: {
        id_value: string;
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ApiKeyPrivate"][];
        };
      };
      /** @description User does not have permission to view another user's API keys */
      403: {
        content: {
          "application/json": components["schemas"]["DetailOnlyResponse"];
        };
      };
      /** @description User not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Is Api Key Available */
  get_is_api_key_available_users__user_id__api_keys_available__get: {
    parameters: {
      query: {
        id_value: string;
        name: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description User does not have permission to view another user's API keys */
      403: {
        content: {
          "application/json": components["schemas"]["DetailOnlyResponse"];
        };
      };
      /** @description User not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get api_key by ID (admin) */
  api_key_read_admin: {
    parameters: {
      query: {
        id_value: unknown;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ApiKey"];
        };
      };
      /** @description ApiKey not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete api_key by ID (admin) */
  api_key_delete_admin: {
    parameters: {
      query: {
        id_value: unknown;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description ApiKey not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update api_key by ID (admin) */
  api_key_update_admin: {
    parameters: {
      query: {
        id_value: unknown;
        model: components["schemas"]["BaseModel"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ApiKey"];
        };
      };
      /** @description ApiKey not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundResponse"];
        };
      };
      /** @description ApiKey already exists */
      409: {
        content: {
          "application/json": components["schemas"]["DetailOnlyResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create a new api_key (admin) */
  api_key_create_admin: {
    parameters: {
      query: {
        model: components["schemas"]["BaseModel"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ApiKey"];
        };
      };
      /** @description ApiKey already exists */
      409: {
        content: {
          "application/json": components["schemas"]["DetailOnlyResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Add a scope to an API key */
  add_scope_to_api_key_api_keys__api_key_id__scopes__scope_id___post: {
    parameters: {
      path: {
        api_key_id: string;
        scope_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description ApiKey not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Remove a scope from an API key */
  remove_scope_from_api_key_api_keys__api_key_id__scopes__scope_id___delete: {
    parameters: {
      path: {
        api_key_id: string;
        scope_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Is Gallery Available */
  get_is_gallery_available_users__user_id__galleries_available__get: {
    parameters: {
      query: {
        id_value: string;
        name: string;
        parent_id?: string | null;
        date?: string | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description User not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get User Galleries */
  get_user_galleries_users__user_id__galleries__get: {
    parameters: {
      query: {
        id_value: string;
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["GalleryPublic"][];
        };
      };
      /** @description User not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get gallery by ID */
  gallery_read: {
    parameters: {
      query: {
        id_value: unknown;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Gallery"];
        };
      };
      /** @description Gallery not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete gallery by ID */
  gallery_delete: {
    parameters: {
      query: {
        id_value: unknown;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description Gallery not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update gallery by ID */
  gallery_update: {
    parameters: {
      query: {
        id_value: unknown;
        model: components["schemas"]["BaseModel"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Gallery"];
        };
      };
      /** @description Gallery not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundResponse"];
        };
      };
      /** @description Gallery already exists */
      409: {
        content: {
          "application/json": components["schemas"]["DetailOnlyResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create a new gallery */
  gallery_create: {
    parameters: {
      query: {
        model: components["schemas"]["BaseModel"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Gallery"];
        };
      };
      /** @description Gallery already exists */
      409: {
        content: {
          "application/json": components["schemas"]["DetailOnlyResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Upload File To Gallery */
  upload_file_to_gallery__gallery_id__upload__post: {
    parameters: {
      path: {
        gallery_id: string;
      };
    };
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["Body_upload_file_to_gallery__gallery_id__upload__post"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["UploadFileToGalleryResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Sync Gallery */
  sync_gallery__gallery_id__sync__post: {
    parameters: {
      path: {
        gallery_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["DetailOnlyResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get gallery by ID (admin) */
  gallery_read_admin: {
    parameters: {
      query: {
        id_value: unknown;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Gallery"];
        };
      };
      /** @description Gallery not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete gallery by ID (admin) */
  gallery_delete_admin: {
    parameters: {
      query: {
        id_value: unknown;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description Gallery not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update gallery by ID (admin) */
  gallery_update_admin: {
    parameters: {
      query: {
        id_value: unknown;
        model: components["schemas"]["BaseModel"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Gallery"];
        };
      };
      /** @description Gallery not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundResponse"];
        };
      };
      /** @description Gallery already exists */
      409: {
        content: {
          "application/json": components["schemas"]["DetailOnlyResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create a new gallery (admin) */
  gallery_create_admin: {
    parameters: {
      query: {
        model: components["schemas"]["BaseModel"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Gallery"];
        };
      };
      /** @description Gallery already exists */
      409: {
        content: {
          "application/json": components["schemas"]["DetailOnlyResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Pages Profile */
  get_pages_profile_pages_profile__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["GetProfilePageResponse"];
        };
      };
    };
  };
  /** Get Home Page */
  get_home_page_pages_home__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["GetHomePageResponse"];
        };
      };
    };
  };
  /** Get Settings Page */
  get_settings_page_pages_settings__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["GetSettingsPageResponse"];
        };
      };
    };
  };
  /** Get Settings Page */
  get_settings_page_pages_settings_api_keys__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["GetSettingsApiKeysPageResponse"];
        };
      };
    };
  };
  /** Get Styles Page */
  get_styles_page_pages_styles__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["GetStylesPageResponse"];
        };
      };
    };
  };
  /** Get Gallery Page */
  get_gallery_page_pages_galleries__gallery_id___get: {
    parameters: {
      query?: {
        root?: boolean;
      };
      path: {
        gallery_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["GetGalleryPageResponse"];
        };
      };
      /** @description Gallery not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
}
