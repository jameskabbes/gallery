/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/": {
    /** Read Root */
    get: operations["read_root__get"];
  };
  "/studios/": {
    /** Get Studios */
    get: operations["get_studios_studios__get"];
  };
  "/studios/{dir_name}/import/": {
    /** Post Studio Dir Name */
    post: operations["post_studio_dir_name_studios__dir_name__import__post"];
  };
  "/events/": {
    /** Get Events */
    get: operations["get_events_events__get"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** Event */
    Event: {
      _id: components["schemas"]["EventId"];
      /** Datetime */
      datetime?: string | null;
      name?: components["schemas"]["ImageGroupName"];
      media?: components["schemas"]["Media"];
    };
    EventId: string;
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    ImageGroupId: string;
    ImageGroupName: string;
    /** Media */
    Media: {
      /** Content */
      content?: {
        [key: string]: "image" | "video";
      };
    };
    /** Studio */
    Studio: {
      _id: components["schemas"]["StudioId"];
      /** Dir Name */
      dir_name: string;
      /** Name */
      name?: string | null;
    };
    StudioId: string;
    /** StudiosResponse */
    StudiosResponse: {
      /** Studios */
      studios: {
        [key: string]: components["schemas"]["Studio"];
      };
      /** Dir Names To Add */
      dir_names_to_add: string[];
      /** Ids To Delete */
      ids_to_delete: components["schemas"]["StudioId"][];
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
    VideoId: string;
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Read Root */
  read_root__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /** Get Studios */
  get_studios_studios__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StudiosResponse"];
        };
      };
    };
  };
  /** Post Studio Dir Name */
  post_studio_dir_name_studios__dir_name__import__post: {
    parameters: {
      path: {
        dir_name: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StudiosResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Events */
  get_events_events__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: components["schemas"]["Event"];
          };
        };
      };
    };
  };
}
