{
  "openapi": "3.1.0",
  "info": { "title": "FastAPI", "version": "0.1.0" },
  "paths": {
    "/auth/": {
      "get": {
        "summary": "Auth Root",
        "operationId": "auth_root_auth__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAuthReturn" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearerMultiSource": [] }]
      }
    },
    "/token/": {
      "post": {
        "summary": "Post Token",
        "operationId": "post_token_token__post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_post_token_token__post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/auth/login/password/": {
      "post": {
        "summary": "Login",
        "operationId": "login_auth_login_password__post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_auth_login_password__post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LoginResponse" }
              }
            }
          },
          "401": {
            "description": "Could not validate credentials",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DetailOnlyResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/auth/signup/": {
      "post": {
        "summary": "Sign Up",
        "operationId": "sign_up_auth_signup__post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_sign_up_auth_signup__post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SignupResponse" }
              }
            }
          },
          "409": {
            "description": "User already exists",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DetailOnlyResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/auth/login/email-magic-link/": {
      "post": {
        "summary": "Login With Email Magic Link",
        "operationId": "login_with_email_magic_link_auth_login_email_magic_link__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginWithEmailMagicLinkRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DetailOnlyResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/auth/verify-magic-link/": {
      "post": {
        "summary": "Verify Magic Link",
        "operationId": "verify_magic_link_auth_verify_magic_link__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyMagicLinkRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyMagicLinkResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DetailOnlyResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearerMultiSource": [] }]
      }
    },
    "/auth/login/google/": {
      "post": {
        "summary": "Login With Google",
        "operationId": "login_with_google_auth_login_google__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/GoogleAuthRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GoogleAuthResponse" }
              }
            }
          },
          "400": { "description": "Invalid token" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/auth/logout/": {
      "post": {
        "summary": "Logout",
        "operationId": "logout_auth_logout__post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DetailOnlyResponse" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearerMultiSource": [] }]
      }
    },
    "/admin/users/{user_id}": {
      "get": {
        "summary": "Get User By Id Admin",
        "operationId": "get_user_by_id_admin_admin_users__user_id__get",
        "security": [{ "OAuth2PasswordBearerMultiSource": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "User Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/users/": {
      "post": {
        "summary": "Post User Admin",
        "operationId": "post_user_admin_admin_users__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserCreateAdmin" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "409": {
            "description": "User already exists",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DetailOnlyResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearerMultiSource": [] }]
      }
    },
    "/admin/users/{user_id}/": {
      "patch": {
        "summary": "Patch User Admin",
        "operationId": "patch_user_admin_admin_users__user_id___patch",
        "security": [{ "OAuth2PasswordBearerMultiSource": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "User Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserUpdateAdmin" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "400": {
            "description": "User id in url does not match user id in body"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete User Admin",
        "operationId": "delete_user_admin_admin_users__user_id___delete",
        "security": [{ "OAuth2PasswordBearerMultiSource": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "User Id" }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/users/available/username/{username}/": {
      "get": {
        "summary": "User Username Available",
        "operationId": "user_username_available_users_available_username__username___get",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 20,
              "pattern": "^[a-zA-Z0-9_.-]+$",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemAvailableResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/users/available/email/{email}/": {
      "get": {
        "summary": "User Email Available",
        "operationId": "user_email_available_users_available_email__email___get",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email",
              "maxLength": 254,
              "title": "Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemAvailableResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/user/": {
      "get": {
        "summary": "Get User",
        "operationId": "get_user_user__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserPrivate" }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundResponse" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearerMultiSource": [] }]
      },
      "delete": {
        "summary": "Delete User",
        "operationId": "delete_user_user__delete",
        "responses": {
          "204": { "description": "Successful Response" },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundResponse" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearerMultiSource": [] }]
      },
      "patch": {
        "summary": "Patch User",
        "operationId": "patch_user_user__patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserUpdate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserPrivate" }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundResponse" }
              }
            }
          },
          "409": {
            "description": "Username or email already exists",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DetailOnlyResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearerMultiSource": [] }]
      }
    },
    "/admin/user-access-tokens/{user_access_token_id}": {
      "get": {
        "summary": "Get User Access Token By Id Admin",
        "operationId": "get_user_access_token_by_id_admin_admin_user_access_tokens__user_access_token_id__get",
        "security": [{ "OAuth2PasswordBearerMultiSource": [] }],
        "parameters": [
          {
            "name": "user_access_token_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "User Access Token Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserAccessToken" }
              }
            }
          },
          "404": {
            "description": "UserAccessToken not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/user-access-tokens/": {
      "post": {
        "summary": "Post User Access Token Admin",
        "operationId": "post_user_access_token_admin_admin_user_access_tokens__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAccessTokenCreateAdmin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserAccessToken" }
              }
            }
          },
          "409": {
            "description": "User already exists",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DetailOnlyResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearerMultiSource": [] }]
      }
    },
    "/admin/user-access-tokens/{user_access_token_id}/": {
      "patch": {
        "summary": "Patch User Access Token Admin",
        "operationId": "patch_user_access_token_admin_admin_user_access_tokens__user_access_token_id___patch",
        "security": [{ "OAuth2PasswordBearerMultiSource": [] }],
        "parameters": [
          {
            "name": "user_access_token_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "User Access Token Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAccessTokenUpdateAdmin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "400": {
            "description": "User access token id in url does not match user access token id in body"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete User Admin",
        "operationId": "delete_user_admin_admin_user_access_tokens__user_access_token_id___delete",
        "security": [{ "OAuth2PasswordBearerMultiSource": [] }],
        "parameters": [
          {
            "name": "user_access_token_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "User Access Token Id" }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "404": {
            "description": "UserAccessToken not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/user-access-tokens/": {
      "get": {
        "summary": "Get User Access Tokens",
        "operationId": "get_user_access_tokens_user_access_tokens__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/UserAccessToken" },
                  "type": "array",
                  "title": "Response Get User Access Tokens User Access Tokens  Get"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundResponse" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearerMultiSource": [] }]
      }
    },
    "/user-access-tokens/{user_access_token_id}/": {
      "delete": {
        "summary": "Delete User Access Token",
        "operationId": "delete_user_access_token_user_access_tokens__user_access_token_id___delete",
        "security": [{ "OAuth2PasswordBearerMultiSource": [] }],
        "parameters": [
          {
            "name": "user_access_token_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "User Access Token Id" }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/api-keys/{api_key_id}": {
      "get": {
        "summary": "Get Api Key By Id Admin",
        "operationId": "get_api_key_by_id_admin_admin_api_keys__api_key_id__get",
        "security": [{ "OAuth2PasswordBearerMultiSource": [] }],
        "parameters": [
          {
            "name": "api_key_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Api Key Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIKey" }
              }
            }
          },
          "404": {
            "description": "APIKey not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/api-keys/": {
      "post": {
        "summary": "Post Api Key Admin",
        "operationId": "post_api_key_admin_admin_api_keys__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/APIKeyCreateAdmin" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIKey" }
              }
            }
          },
          "409": {
            "description": "User already exists",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DetailOnlyResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearerMultiSource": [] }]
      }
    },
    "/api-keys/": {
      "get": {
        "summary": "Get Api Keys",
        "operationId": "get_api_keys_api_keys__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/APIKey" },
                  "type": "array",
                  "title": "Response Get Api Keys Api Keys  Get"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundResponse" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearerMultiSource": [] }]
      },
      "post": {
        "summary": "Post Api Key",
        "operationId": "post_api_key_api_keys__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/APIKeyCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIKey" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearerMultiSource": [] }]
      }
    },
    "/api-keys/{api_key_id}/": {
      "patch": {
        "summary": "Patch Api Key",
        "operationId": "patch_api_key_api_keys__api_key_id___patch",
        "security": [{ "OAuth2PasswordBearerMultiSource": [] }],
        "parameters": [
          {
            "name": "api_key_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Api Key Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/APIKeyUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIKey" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Api Key",
        "operationId": "delete_api_key_api_keys__api_key_id___delete",
        "security": [{ "OAuth2PasswordBearerMultiSource": [] }],
        "parameters": [
          {
            "name": "api_key_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Api Key Id" }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/profile/page/": {
      "get": {
        "summary": "Get Pages Profile",
        "operationId": "get_pages_profile_profile_page__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfilePageResponse"
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearerMultiSource": [] }]
      }
    },
    "/home/page/": {
      "get": {
        "summary": "Get Home Page",
        "operationId": "get_home_page_home_page__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetHomePageResponse" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearerMultiSource": [] }]
      }
    },
    "/settings/page/": {
      "get": {
        "summary": "Get Settings Page",
        "operationId": "get_settings_page_settings_page__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSettingsPageResponse"
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearerMultiSource": [] }]
      }
    },
    "/settings/api-keys/page/": {
      "get": {
        "summary": "Get Settings Page",
        "operationId": "get_settings_page_settings_api_keys_page__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSettingsAPIKeysPageResponse"
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearerMultiSource": [] }]
      }
    },
    "/styles/page/": {
      "get": {
        "summary": "Get Styles Page",
        "operationId": "get_styles_page_styles_page__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStylesPageResponse"
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearerMultiSource": [] }]
      }
    }
  },
  "components": {
    "schemas": {
      "APIKey": {
        "properties": {
          "user_id": { "type": "string", "title": "User Id" },
          "issued": {
            "type": "string",
            "format": "date-time",
            "title": "Issued"
          },
          "expiry": {
            "type": "string",
            "format": "date-time",
            "title": "Expiry"
          },
          "id": { "type": "string", "title": "Id" },
          "name": {
            "type": "string",
            "maxLength": 256,
            "minLength": 1,
            "title": "Name"
          }
        },
        "type": "object",
        "required": ["user_id", "issued", "expiry", "id", "name"],
        "title": "APIKey"
      },
      "APIKeyCreate": {
        "properties": {
          "lifespan": {
            "anyOf": [
              { "type": "string", "format": "duration" },
              { "type": "null" }
            ],
            "title": "Lifespan"
          },
          "expiry": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Expiry"
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "minLength": 1,
            "title": "Name"
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "APIKeyCreate"
      },
      "APIKeyCreateAdmin": {
        "properties": {
          "lifespan": {
            "anyOf": [
              { "type": "string", "format": "duration" },
              { "type": "null" }
            ],
            "title": "Lifespan"
          },
          "expiry": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Expiry"
          },
          "user_id": { "type": "string", "title": "User Id" },
          "name": {
            "type": "string",
            "maxLength": 256,
            "minLength": 1,
            "title": "Name"
          }
        },
        "type": "object",
        "required": ["user_id", "name"],
        "title": "APIKeyCreateAdmin"
      },
      "APIKeyUpdate": {
        "properties": {
          "id": { "type": "string", "title": "Id" },
          "lifespan": {
            "anyOf": [
              { "type": "string", "format": "duration" },
              { "type": "null" }
            ],
            "title": "Lifespan"
          },
          "expiry": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Expiry"
          },
          "name": {
            "anyOf": [
              { "type": "string", "maxLength": 256, "minLength": 1 },
              { "type": "null" }
            ],
            "title": "Name"
          }
        },
        "type": "object",
        "required": ["id"],
        "title": "APIKeyUpdate"
      },
      "Body_login_auth_login_password__post": {
        "properties": {
          "stay_signed_in": {
            "type": "boolean",
            "title": "Stay Signed In",
            "default": false
          },
          "grant_type": {
            "anyOf": [
              { "type": "string", "pattern": "password" },
              { "type": "null" }
            ],
            "title": "Grant Type"
          },
          "username": { "type": "string", "title": "Username" },
          "password": { "type": "string", "title": "Password" },
          "scope": { "type": "string", "title": "Scope", "default": "" },
          "client_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": ["username", "password"],
        "title": "Body_login_auth_login_password__post"
      },
      "Body_post_token_token__post": {
        "properties": {
          "stay_signed_in": {
            "type": "boolean",
            "title": "Stay Signed In",
            "default": false
          },
          "grant_type": {
            "anyOf": [
              { "type": "string", "pattern": "password" },
              { "type": "null" }
            ],
            "title": "Grant Type"
          },
          "username": { "type": "string", "title": "Username" },
          "password": { "type": "string", "title": "Password" },
          "scope": { "type": "string", "title": "Scope", "default": "" },
          "client_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": ["username", "password"],
        "title": "Body_post_token_token__post"
      },
      "Body_sign_up_auth_signup__post": {
        "properties": {
          "email": { "type": "string", "format": "email", "title": "Email" },
          "password": { "type": "string", "title": "Password" },
          "stay_signed_in": {
            "type": "boolean",
            "title": "Stay Signed In",
            "default": false
          }
        },
        "type": "object",
        "required": ["email", "password"],
        "title": "Body_sign_up_auth_signup__post"
      },
      "DetailOnlyResponse": {
        "properties": { "detail": { "type": "string", "title": "Detail" } },
        "type": "object",
        "required": ["detail"],
        "title": "DetailOnlyResponse"
      },
      "GetAuthBaseReturn": {
        "properties": {
          "user": {
            "anyOf": [
              { "$ref": "#/components/schemas/UserPrivate" },
              { "type": "null" }
            ]
          },
          "scopes": {
            "anyOf": [
              {
                "items": { "$ref": "#/components/schemas/ScopeName" },
                "type": "array",
                "uniqueItems": true
              },
              { "type": "null" }
            ],
            "title": "Scopes"
          },
          "expiry": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Expiry"
          }
        },
        "type": "object",
        "title": "GetAuthBaseReturn"
      },
      "GetAuthReturn": {
        "properties": {
          "auth": { "$ref": "#/components/schemas/GetAuthBaseReturn" }
        },
        "type": "object",
        "required": ["auth"],
        "title": "GetAuthReturn"
      },
      "GetHomePageResponse": {
        "properties": {
          "auth": { "$ref": "#/components/schemas/GetAuthBaseReturn" }
        },
        "type": "object",
        "required": ["auth"],
        "title": "GetHomePageResponse"
      },
      "GetProfilePageResponse": {
        "properties": {
          "auth": { "$ref": "#/components/schemas/GetAuthBaseReturn" },
          "user": {
            "anyOf": [
              { "$ref": "#/components/schemas/UserPrivate" },
              { "type": "null" }
            ]
          }
        },
        "type": "object",
        "required": ["auth"],
        "title": "GetProfilePageResponse"
      },
      "GetSettingsAPIKeysPageResponse": {
        "properties": {
          "auth": { "$ref": "#/components/schemas/GetAuthBaseReturn" },
          "api_keys": { "$ref": "#/components/schemas/PluralAPIKeysDict" },
          "scopes": { "$ref": "#/components/schemas/PluralScopesDict" }
        },
        "type": "object",
        "required": ["auth", "api_keys", "scopes"],
        "title": "GetSettingsAPIKeysPageResponse"
      },
      "GetSettingsPageResponse": {
        "properties": {
          "auth": { "$ref": "#/components/schemas/GetAuthBaseReturn" }
        },
        "type": "object",
        "required": ["auth"],
        "title": "GetSettingsPageResponse"
      },
      "GetStylesPageResponse": {
        "properties": {
          "auth": { "$ref": "#/components/schemas/GetAuthBaseReturn" }
        },
        "type": "object",
        "required": ["auth"],
        "title": "GetStylesPageResponse"
      },
      "GoogleAuthRequest": {
        "properties": {
          "access_token": { "type": "string", "title": "Access Token" }
        },
        "type": "object",
        "required": ["access_token"],
        "title": "GoogleAuthRequest"
      },
      "GoogleAuthResponse": {
        "properties": {
          "auth": { "$ref": "#/components/schemas/GetAuthBaseReturn" }
        },
        "type": "object",
        "required": ["auth"],
        "title": "GoogleAuthResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ItemAvailableResponse": {
        "properties": {
          "available": { "type": "boolean", "title": "Available" }
        },
        "type": "object",
        "required": ["available"],
        "title": "ItemAvailableResponse"
      },
      "LoginResponse": {
        "properties": {
          "auth": { "$ref": "#/components/schemas/GetAuthBaseReturn" }
        },
        "type": "object",
        "required": ["auth"],
        "title": "LoginResponse"
      },
      "LoginWithEmailMagicLinkRequest": {
        "properties": {
          "email": {
            "type": "string",
            "maxLength": 254,
            "minLength": 1,
            "format": "email",
            "title": "Email"
          },
          "stay_signed_in": {
            "type": "boolean",
            "title": "Stay Signed In",
            "default": false
          }
        },
        "type": "object",
        "required": ["email"],
        "title": "LoginWithEmailMagicLinkRequest"
      },
      "NotFoundResponse": {
        "properties": { "detail": { "type": "string", "title": "Detail" } },
        "type": "object",
        "required": ["detail"],
        "title": "NotFoundResponse"
      },
      "PluralAPIKeysDict": {
        "additionalProperties": { "$ref": "#/components/schemas/APIKey" },
        "type": "object"
      },
      "PluralScopesDict": {
        "additionalProperties": { "$ref": "#/components/schemas/Scope" },
        "type": "object"
      },
      "Scope": {
        "properties": {
          "id": { "type": "string", "title": "Id" },
          "name": { "type": "string", "title": "Name" }
        },
        "type": "object",
        "required": ["id", "name"],
        "title": "Scope"
      },
      "ScopeName": {
        "type": "string",
        "enum": ["admin", "users.read", "users.write"]
      },
      "SignupResponse": {
        "properties": {
          "auth": { "$ref": "#/components/schemas/GetAuthBaseReturn" }
        },
        "type": "object",
        "required": ["auth"],
        "title": "SignupResponse"
      },
      "User": {
        "properties": {
          "id": { "type": "string", "title": "Id" },
          "email": {
            "type": "string",
            "maxLength": 254,
            "minLength": 1,
            "format": "email",
            "title": "Email"
          },
          "username": {
            "type": "string",
            "maxLength": 20,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_.-]+$",
            "title": "Username"
          },
          "hashed_password": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Hashed Password"
          },
          "user_role_id": { "type": "string", "title": "User Role Id" }
        },
        "type": "object",
        "required": ["id", "email", "user_role_id"],
        "title": "User"
      },
      "UserAccessToken": {
        "properties": {
          "user_id": { "type": "string", "title": "User Id" },
          "issued": {
            "type": "string",
            "format": "date-time",
            "title": "Issued"
          },
          "expiry": {
            "type": "string",
            "format": "date-time",
            "title": "Expiry"
          },
          "id": { "type": "string", "title": "Id" }
        },
        "type": "object",
        "required": ["user_id", "issued", "expiry", "id"],
        "title": "UserAccessToken"
      },
      "UserAccessTokenCreateAdmin": {
        "properties": {
          "lifespan": {
            "anyOf": [
              { "type": "string", "format": "duration" },
              { "type": "null" }
            ],
            "title": "Lifespan"
          },
          "expiry": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Expiry"
          },
          "user_id": { "type": "string", "title": "User Id" }
        },
        "type": "object",
        "required": ["user_id"],
        "title": "UserAccessTokenCreateAdmin"
      },
      "UserAccessTokenUpdateAdmin": {
        "properties": {
          "id": { "type": "string", "title": "Id" },
          "lifespan": {
            "anyOf": [
              { "type": "string", "format": "duration" },
              { "type": "null" }
            ],
            "title": "Lifespan"
          },
          "expiry": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Expiry"
          }
        },
        "type": "object",
        "required": ["id"],
        "title": "UserAccessTokenUpdateAdmin"
      },
      "UserCreateAdmin": {
        "properties": {
          "email": {
            "type": "string",
            "maxLength": 254,
            "minLength": 1,
            "format": "email",
            "title": "Email"
          },
          "password": {
            "anyOf": [
              { "type": "string", "maxLength": 64, "minLength": 1 },
              { "type": "null" }
            ],
            "title": "Password"
          },
          "user_role_id": {
            "type": "string",
            "title": "User Role Id",
            "default": "2"
          }
        },
        "type": "object",
        "required": ["email"],
        "title": "UserCreateAdmin"
      },
      "UserPrivate": {
        "properties": {
          "id": { "type": "string", "title": "Id" },
          "username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20,
                "minLength": 3,
                "pattern": "^[a-zA-Z0-9_.-]+$"
              },
              { "type": "null" }
            ],
            "title": "Username"
          },
          "email": {
            "type": "string",
            "maxLength": 254,
            "minLength": 1,
            "format": "email",
            "title": "Email"
          }
        },
        "type": "object",
        "required": ["id", "username", "email"],
        "title": "UserPrivate"
      },
      "UserUpdate": {
        "properties": {
          "id": { "type": "string", "title": "Id" },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 254,
                "minLength": 1,
                "format": "email"
              },
              { "type": "null" }
            ],
            "title": "Email"
          },
          "password": {
            "anyOf": [
              { "type": "string", "maxLength": 64, "minLength": 1 },
              { "type": "null" }
            ],
            "title": "Password"
          },
          "username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20,
                "minLength": 3,
                "pattern": "^[a-zA-Z0-9_.-]+$"
              },
              { "type": "null" }
            ],
            "title": "Username"
          }
        },
        "type": "object",
        "required": ["id"],
        "title": "UserUpdate"
      },
      "UserUpdateAdmin": {
        "properties": {
          "id": { "type": "string", "title": "Id" },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 254,
                "minLength": 1,
                "format": "email"
              },
              { "type": "null" }
            ],
            "title": "Email"
          },
          "password": {
            "anyOf": [
              { "type": "string", "maxLength": 64, "minLength": 1 },
              { "type": "null" }
            ],
            "title": "Password"
          },
          "username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20,
                "minLength": 3,
                "pattern": "^[a-zA-Z0-9_.-]+$"
              },
              { "type": "null" }
            ],
            "title": "Username"
          },
          "user_role_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "User Role Id"
          }
        },
        "type": "object",
        "required": ["id"],
        "title": "UserUpdateAdmin"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      },
      "VerifyMagicLinkRequest": {
        "properties": {
          "stay_signed_in": {
            "type": "boolean",
            "title": "Stay Signed In",
            "default": false
          }
        },
        "type": "object",
        "title": "VerifyMagicLinkRequest"
      },
      "VerifyMagicLinkResponse": {
        "properties": {
          "auth": { "$ref": "#/components/schemas/GetAuthBaseReturn" }
        },
        "type": "object",
        "required": ["auth"],
        "title": "VerifyMagicLinkResponse"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearerMultiSource": {
        "type": "oauth2",
        "flows": { "password": { "scopes": {}, "tokenUrl": "token/" } }
      }
    }
  }
}
